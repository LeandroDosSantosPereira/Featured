<header>
  <h1>FeaturedContent_index</h1>

  <div class="show_button">
    <%= link_to "show" , :show_path %>
  </div>
</header>

<div class="container-fluid">
  <div class="row flex-nowrap">
    <div class="col-auto col-md-3 col-xl-2 px-sm-2 px-0 bg-dark">
      <div class="d-flex flex-column align-items-center align-items-sm-start px-3 pt-2 text-white min-vh-100">
        <a href="/" class="d-flex align-items-center pb-3 mb-md-0 me-md-auto text-white text-decoration-none">
          <span class="fs-5 d-none d-sm-inline">Menu</span>
        </a>
        <ul class="nav nav-pills flex-column mb-sm-auto mb-0 align-items-center align-items-sm-start" id="menu">
          <li class="nav-item">
            <button onclick="createStripe()" class="nav-link align-middle px-0">
              <%= image_tag("fc-tarja", class: "fc-options" ) %>
            </button>
          </li>

          <li class="nav-item">
            <button onclick="createBigTitle()" class="nav-link align-middle px-0">
              <%= image_tag("fc-big-title", class: "fc-options" ) %>
            </button>
          </li>

          <li class="nav-item">
            <button onclick="createSlide()" class="nav-link align-middle px-0">
              <%= image_tag("fc-slide", class: "fc-options" ) %>
            </button>
          </li>

          <li class="nav-item">
            <a href="#" class="nav-link align-middle px-0">
              <%= image_tag("fc-image-in-block", class: "fc-options" ) %>
            </a>
          </li>
        </ul>
      </div>
    </div>
    <div>
      <div class="col py-3" id="content">
        <%#= render "featured_content/search_form" %>
          Content area...
      </div>
    </div>
  </div>
</div>

<script>
  function findParent(current_element){
    parent = current_element.parentNode.parentNode.parentNode.childNodes[0];
    return parent.id.toString();
  }

  function setResult(title_in_json, parent_id) {
    console.log("title: " + title_in_json.toString());
    console.log("parent id: " + parent_id);

    var element = document.getElementById(parent_id);
    element.innerHTML = '';

    let text_strip = document.createTextNode(title_in_json);
    element.appendChild(text_strip);
  }

  function createStripe() {
    //Create strip
    let strip = document.createElement("div")
    strip.setAttribute("class", "p-3 mb-2 bg-dark text-white")
    let test_id = idGenerator();
    strip.setAttribute("id", test_id);
    let text = document.createTextNode("Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s");

    strip.appendChild(text);
    appendDiv(strip)
    //appendDiv(createSearchForm());
  }

  // Create Big title
  function createBigTitle() {

    let title = document.createElement("h3")
    title.setAttribute("class", "customizing-headings")
    let text = document.createTextNode("Título");
    title.appendChild(text)

    let subtitle = document.createElement("p")
    text = document.createTextNode("Sub título");
    subtitle.appendChild(text)

    appendDiv(title, subtitle)
  }

  // Delete function
  function deleteItem(id) {
    console.log(id)
    const element = document.getElementById(id);
    element.remove();
  }

  //Generate dinamic id
  function idGenerator() {
    return Math.random().toString(36).slice(2)
  }

  // Create buttons elements
  function deleteButton(id) {
    buttondlt = document.createElement("button")
    buttondlt.setAttribute("class", "btn btn-danger")
    buttondlt.setAttribute("id", id)
    buttondlt.setAttribute("onclick", "deleteItem(this.id)")
    buttondlt.textContent = 'Deletar';
    return buttondlt
  }

  function createSearchForm(id){
    let search_content = document.createElement("div");
    search_content.setAttribute("class", "search_content");
    //search_content.setAttribute("data-controller", "button-test");
    search_content.setAttribute("id", id + "_search-content");


    search_content.innerHTML =
      `<div class = "search_content">
      <% @params_div = "${id}_search_results" %>
      <% params[:div_id] = @params_div %>
      <%= form_with url: search_featured_content_index_path, method: :post do |form| %>
      <%= form.search_field :title_search, value: params[:title_search], oninput: "this.form.requestSubmit()" %>
      <%= form.hidden_field :div_id, value: params[:div_id] %>
      <% end %>

      <div id="${id}_search_results"></div>
      </div>`
    ;

    return search_content;
  }

  // Append Elements in view
  function appendDiv(...n) {
    const uid = idGenerator()
    let element = document.createElement("div");
    buttondlt = deleteButton(uid)
    element.setAttribute("id", uid)
    element.setAttribute("class", "featured")

    // Add attributes to the div
    n.forEach(e => {
      element.appendChild(e);
    });

    // Create button and search_form
    element.appendChild(createSearchForm(uid));
    element.appendChild(buttondlt);
    
    // Add div in container
    content = document.getElementById("content")
    content.appendChild(element)
  }  
</script>

  <script>

    function print(p) {
      console.log(p.title)
    }
    function createStripe() {
      //Create strip
      let strip = document.createElement("div")
      strip.setAttribute("class", "p-3 mb-2 bg-dark text-white")
      let text = document.createTextNode("Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s");

      strip.appendChild(text);
      appendDiv(strip)
      //appendDiv(createSearchForm());
    }

    // Create Big title
    function createBigTitle() {

      let title = document.createElement("h3")
      title.setAttribute("id", "customizing-headings")
      let text = document.createTextNode("Título");
      title.appendChild(text)

      let subtitle = document.createElement("p")
      text = document.createTextNode("Sub título");
      subtitle.appendChild(text)

      appendDiv(title, subtitle)
    }

    // Delete function
    function deleteItem(id) {
      console.log(id)
      const element = document.getElementById(id);
      element.remove();
    }

    //Generate dinamic ic
    function idGenerator() {
      return Math.random().toString(36).slice(2)
    }

    // Create buttons elements
    function deleteButton(id) {
      buttondlt = document.createElement("button")
      buttondlt.setAttribute("class", "btn btn-danger")
      buttondlt.setAttribute("id", id)
      buttondlt.setAttribute("onclick", "deleteItem(this.id)")
      buttondlt.textContent = 'Deletar';
      return buttondlt
    }

    function createSearchForm() {
      let search_content = document.createElement("div");
      search_content.setAttribute("class", "search_content");

      search_content.innerHTML =
        `<form action="/featured_content/search" accept-charset="UTF-8" method="post">
      <input type="hidden" name="authenticity_token" value="900YW6CMVh1ApJK8xCH8Z3jKVECwC61x1ACdMTAo30IbBVO7TX9uk8Gf9p02hNcg7s9j_uInfZtS5viqodhLYQ" autocomplete="off" />
      <input oninput="this.form.requestSubmit()" type="search" name="title_search" id="title_search" />
      </form>
      <div id="search_results">
      </div>`
        ;

      return search_content;
    }

    // Append Elements in view
    function appendDiv(...n) {
      const uid = idGenerator()
      let element = document.createElement("div");
      buttondlt = deleteButton(uid)
      element.setAttribute("id", uid)
      element.setAttribute("class", "featured")

      // Add attributes to the div
      n.forEach(e => {
        element.appendChild(e);
      });

      // Create button and search_form
      element.appendChild(createSearchForm());
      element.appendChild(buttondlt);

      // Add div in container
      content = document.getElementById("content")
      content.appendChild(element)
    }

    function createSlide() {
      const uid = idGenerator()

      document.getElementById("content").innerHTML += `    
      <div id="${uid}" class="carousel slide" data-bs-ride="carousel">
        <div class="carousel-indicators" id="indicator${uid}">
          <button type="button" data-bs-target="#${uid}" data-bs-slide-to="0" class="active"
            aria-current="true" aria-label="Slide 1">
          </button>        
        </div>
        <div class="carousel-inner" id="inner${uid}">
          <div class="carousel-item active">
            <img id="blah" src="https://source.unsplash.com/collection/190726/3000x900" class="d-block w-100" alt="image">
            <div class="carousel-caption d-none d-md-block">
              <h3 class="text-danger">First slide label</h3>
              <p class="lead">Some representative placeholder content for the first slide.</p>
              <input type='file' onchange="readURL(this);" />
            </div>
          </div>        
        </div>
        <button class="carousel-control-prev" type="button" data-bs-target="#${uid}"
          data-bs-slide="prev">
          <span class="carousel-control-prev-icon" aria-hidden="true"></span>
          <span class="visually-hidden">Previous</span>
        </button>
        <button class="carousel-control-next" type="button" data-bs-target="#${uid}"
          data-bs-slide="next">
          <span class="carousel-control-next-icon" aria-hidden="true"></span>
          <span class="visually-hidden">Next</span>
        </button>
      </div> 
      <button id= "${uid}" onclick= "addSlide(this.id)">Adicionar + </button>
      `
    }

    function addSlide(uid) {
      id = uid

      let = div =  document.getElementById("indicator" + id)

      let nodes = div.querySelectorAll('button');
      let first = nodes[0];
      let last = nodes[nodes.length- 1];

      let cont = parseInt(last.getAttributeNode("data-bs-slide-to").value)

      document.getElementById("indicator" + id).innerHTML += `        
        <button type="button" data-bs-target="#${id}" data-bs-slide-to="${cont + 1}"
        aria-label="Slide ${cont + 2}">
        </button>       
      `

      document.getElementById("inner" + id).innerHTML += ` 
      <div class="carousel-item">
        <img src="https://source.unsplash.com/collection/190727/3000x900" class="d-block w-100" alt="image">
        <div class="carousel-caption d-none d-md-block">
          <h3 class="text-danger">Second slide label</h3>
          <p class="lead">Some representative placeholder content for the second slide.</p>
        </div>
      </div>
      `
    }

    function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#blah')
                        .attr('src', e.target.result);
                };

                reader.readAsDataURL(input.files[0]);
            }
        }

  </script>
